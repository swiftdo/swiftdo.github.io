(window.webpackJsonp=window.webpackJsonp||[]).push([[86],{593:function(t,a,e){"use strict";e.r(a);var s=e(4),n=Object(s.a)({},(function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h2",{attrs:{id:"github-pages"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#github-pages"}},[t._v("#")]),t._v(" GitHub Pages")]),t._v(" "),e("p",[t._v("GitHub Pages 是 GitHub 提供的一个网页寄存服务，于 2008 年推出。可以用于存放静态网页，包括博客、项目文档甚至整本书。Jekyll 软件可以用于将文档转换成静态网页，该软件提供了将网页上传到 GitHub Pages 的功能。一般 GitHub Pages 的网站使用 github.io 的子域名，但是用户也可以使用第三方域名。")]),t._v(" "),e("p",[t._v("有两种最基本的用法：")]),t._v(" "),e("ol",[e("li",[t._v("作为你自己（或者组织）的网站（访问地址示例："),e("code",[t._v("http://username.github.io")]),t._v("）")]),t._v(" "),e("li",[t._v("作为你某一个项目的网站（访问地址示例："),e("code",[t._v("http://username.github.io/projectname")]),t._v("）")])]),t._v(" "),e("p",[t._v("更多细节请阅读"),e("a",{attrs:{href:"https://help.github.com/cn/github/working-with-github-pages/about-github-pages",target:"_blank",rel:"noopener noreferrer"}},[t._v("官方文档"),e("OutboundLink")],1)]),t._v(" "),e("h2",{attrs:{id:"使用-travis-ci-自动更新"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#使用-travis-ci-自动更新"}},[t._v("#")]),t._v(" 使用 Travis CI 自动更新")]),t._v(" "),e("p",[e("a",{attrs:{href:"https://travis-ci.org/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Travis CI"),e("OutboundLink")],1),t._v(" 提供的是持续集成服务（Continuous Integration，简称 CI）。我们在软件开发过程中，有构建、测试、部署这些必不可少的步骤，而这些会花掉我们很多的时间。为了提高软件开发的效率，现在涌现了很多自动化工具。"),e("a",{attrs:{href:"https://travis-ci.org/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Travis CI"),e("OutboundLink")],1),t._v(" 是目前"),e("a",{attrs:{href:"https://github.blog/2017-11-07-github-welcomes-all-ci-tools/",target:"_blank",rel:"noopener noreferrer"}},[t._v("市场份额"),e("OutboundLink")],1),t._v("最大的一个，而且有很详细的文档以及可以和 Github 很好的对接。")]),t._v(" "),e("h3",{attrs:{id:"持续集成"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#持续集成"}},[t._v("#")]),t._v(" 持续集成")]),t._v(" "),e("p",[t._v("持续集成指的是只要代码有变更，就自动运行构建和测试，反馈运行结果。")]),t._v(" "),e("p",[t._v("持续集成的好处在于，每次代码的小幅变更，就能看到运行结果，从而不断累积小的变更，而不是在开发周期结束时，一下子合并一大块代码。")]),t._v(" "),e("p",[t._v("可以阅读 "),e("a",{attrs:{href:"http://www.ruanyifeng.com/blog/2015/09/continuous-integration.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("持续集成是什么？"),e("OutboundLink")],1),t._v(" 进一步了解。")]),t._v(" "),e("p",[t._v("GitHub Pages 第二种用法的部署，VuePress 已详细提供，直接按照 "),e("a",{attrs:{href:"https://vuepress.vuejs.org/zh/guide/deploy.html#github-pages",target:"_blank",rel:"noopener noreferrer"}},[t._v("部署"),e("OutboundLink")],1),t._v(" 配置。")]),t._v(" "),e("p",[t._v("下面一起来配置下第一种用法的部署方案。")]),t._v(" "),e("p",[t._v("提供一个我已经配置好的项目作为参考："),e("a",{attrs:{href:"https://github.com/swiftdo/swiftdo",target:"_blank",rel:"noopener noreferrer"}},[t._v("swiftdo/swiftdo"),e("OutboundLink")],1)]),t._v(" "),e("h3",{attrs:{id:"travis-yml"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#travis-yml"}},[t._v("#")]),t._v(" "),e("code",[t._v(".travis.yml")])]),t._v(" "),e("div",{staticClass:"language-yml extra-class"},[e("pre",{pre:!0,attrs:{class:"language-yml"}},[e("code",[e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("language")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" node_js  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 指定运行环境")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("node_js")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" lts/*  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# node环境的版本")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("install")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" yarn install "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# npm ci")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("script")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" yarn docs"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("build "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# npm run docs:build")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("deploy")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("provider")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" pages\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("skip_cleanup")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean important"}},[t._v("true")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("local_dir")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" docs/.vuepress/dist\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("github_token")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" $GITHUB_TOKEN "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 在 GitHub 中生成，用于允许 Travis 向你的仓库推送代码。在 Travis 的项目设置页面进行配置，设置为 secure variable")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("keep_history")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean important"}},[t._v("true")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("on")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("branch")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" master\n")])])]),e("p",[t._v("这是最基本的配置。")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("provider")]),t._v("：解析支持者为 github pages")]),t._v(" "),e("li",[e("code",[t._v("skip_cleanup")]),t._v("：值必须为 true 不然会把你在构建时生成的文件给删除掉。")]),t._v(" "),e("li",[e("code",[t._v("on: branch: master")]),t._v("：当 master 分支有变化时，才执行这个部署。更多条件设置请参考"),e("a",{attrs:{href:"https://docs.travis-ci.com/user/deployment/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Deployment"),e("OutboundLink")],1)]),t._v(" "),e("li",[e("code",[t._v("GITHUB_TOKEN")]),t._v("：生成请参考 "),e("a",{attrs:{href:"https://help.github.com/articles/creating-a-personal-access-token-for-the-command-line/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Creating a personal access token for the command line"),e("OutboundLink")],1),t._v("。如果你的仓库是公开的，那么在给权限的时候只需要给"),e("code",[t._v("public_repo")]),t._v(", 如果你的仓库是私有的那就要给 "),e("code",[t._v("repo")]),t._v(" 权限，尽量给更少的权限。然后在"),e("a",{attrs:{href:"https://travis-ci.org/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Travis CI"),e("OutboundLink")],1),t._v("的控制台设置环境变量 "),e("code",[t._v("GITHUB_TOKEN")]),t._v(" 值为刚才生成的 token。在添加环境变量的时候有个开关 "),e("code",[t._v("Display value in build log")]),t._v(" 不要打开，不然别人就可以在 CI 的 log 里面看到你的 token，就可以对你的公开仓库进行任意修改（给少的权限，不公开）。")]),t._v(" "),e("li",[e("code",[t._v("local_dir")]),t._v("：是将要推送到 GitHub Pages 的目录，默认的值为当前目录。")]),t._v(" "),e("li",[e("code",[t._v("keep_history")]),t._v("：禁止 travis 对你的 github 项目进行强制推送。")])]),t._v(" "),e("p",[t._v("对于样例我们要通过 "),e("code",[t._v("https://swiftdo.github.io")]),t._v(" 打开站点，那么生成的站点必须放到 "),e("code",[t._v("swiftdo/swiftdo.github.io")]),t._v(" 仓库这里。\n然而我们的文档源码是在 "),e("code",[t._v("swiftdo/swiftdo")]),t._v("。")]),t._v(" "),e("h3",{attrs:{id:"如何将构建的产物放到-swiftdo-swiftdo-github-io"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#如何将构建的产物放到-swiftdo-swiftdo-github-io"}},[t._v("#")]),t._v(" 如何将构建的产物放到 "),e("code",[t._v("swiftdo/swiftdo.github.io")]),t._v("？")]),t._v(" "),e("p",[t._v("方案一：鉴于之前使用过 "),e("a",{attrs:{href:"https://hexo.io/zh-cn/",target:"_blank",rel:"noopener noreferrer"}},[t._v("hexo"),e("OutboundLink")],1),t._v("，它的部署方案比较简单，直接配置好产物的远端仓库，通过 "),e("code",[t._v("hexo deploy")]),t._v(" 一键部署。原理很简单就是通过本地构建产物，然后将其提交到远端。所以我们可以自定义 "),e("a",{attrs:{href:"https://github.com/swiftdo/swiftdo/blob/master/deploy.sh",target:"_blank",rel:"noopener noreferrer"}},[t._v("deploy.sh"),e("OutboundLink")],1),t._v("， 执行脚本提交。")]),t._v(" "),e("p",[t._v("方案二："),e("code",[t._v(".travis.yml")]),t._v(" 中去掉 "),e("code",[t._v("deploy")]),t._v(", 直接在 "),e("code",[t._v("script")]),t._v(" 中 "),e("code",[t._v("- sh deply.sh")]),t._v("。")]),t._v(" "),e("p",[t._v("方案一是可行的，但是失去了 CI 的便捷性，部署强依赖开发设备上的环境。方案二可能引入更深的坑，比如编译好了产物，提交怎么办，怎么获得这个提交的权限。所以上面的方案都不是很完美。")]),t._v(" "),e("blockquote",[e("p",[t._v("在这里我犯了个错误，对于 CI 的半吊子，直接经验性思考，造成片面。\n新事物，一般是变得越来越简单，而不是越来越复杂。\n全面了解新事物第一手资料就是官方文档。")])]),t._v(" "),e("p",[t._v("所以，看到这里，请你在使用的时候，一定要读一遍官方文档。")]),t._v(" "),e("p",[e("code",[t._v("repo")]),t._v("：GitHub Pages 所在的代码仓库，默认值为当前仓库。\n"),e("code",[t._v("target_branch")]),t._v("：GitHub Pages 所使用的分支，默认为 "),e("code",[t._v("gh-pages")]),t._v("。")]),t._v(" "),e("p",[t._v("所以最后的配置：")]),t._v(" "),e("div",{staticClass:"language-yaml extra-class"},[e("pre",{pre:!0,attrs:{class:"language-yaml"}},[e("code",[e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("language")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" node_js\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("node_js")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" lts/*\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("install")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" yarn install "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# npm ci")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("script")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" yarn docs"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("build "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# npm run docs:build")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("deploy")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("provider")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" pages\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("skip_cleanup")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean important"}},[t._v("true")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("local_dir")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" docs/.vuepress/dist\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("github_token")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" $GITHUB_TOKEN "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 在 GitHub 中生成，用于允许 Travis 向你的仓库推送代码。在 Travis 的项目设置页面进行配置，设置为 secure variable")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("repo")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" swiftdo/swiftdo.github.io\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("target_branch")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" master\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("fqdn")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" oldbird.run "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# CNAME 的域名")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("keep_history")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean important"}},[t._v("true")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("on")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("branch")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" master\n")])])])])}),[],!1,null,null,null);a.default=n.exports}}]);