(window.webpackJsonp=window.webpackJsonp||[]).push([[164],{627:function(t,s,n){"use strict";n.r(s);var a=n(2),e=Object(a.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("p",[t._v("Pyenv 是一个 Python 版本管理工具，它可以让您在同一台计算机上安装多个不同版本的 Python，并且可以轻松地在这些版本之间切换。这对于开发人员来说非常有用，因为不同的项目可能需要使用不同版本的 Python。Pyenv 还允许您为每个项目设置特定的 Python 版本，这样可以确保项目在正确的 Python 环境中运行。")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[t._v("$ brew update\n$ brew "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" pyenv\n")])])]),s("p",[t._v("安装完成后，您需要将 Pyenv 添加到您的 Shell 配置文件中。对于 macOS 和 Linux 用户，通常是在 ~/.bash_profile、~/.bashrc 或 ~/.zshrc 文件中添加以下行：")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("export")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s("span",{pre:!0,attrs:{class:"token environment constant"}},[t._v("PATH")])]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"'),s("span",{pre:!0,attrs:{class:"token environment constant"}},[t._v("$HOME")]),t._v("/.pyenv/bin:"),s("span",{pre:!0,attrs:{class:"token environment constant"}},[t._v("$PATH")]),t._v('"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("eval")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"'),s("span",{pre:!0,attrs:{class:"token variable"}},[s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$(")]),t._v("pyenv init "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--path")]),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v(")")])]),t._v('"')]),t._v("\n")])])]),s("p",[t._v("保存文件后，重新打开终端窗口或运行 source ~/.bash_profile（或对应的配置文件）以使更改生效。")]),t._v(" "),s("p",[t._v("为什么要使用 Pyenv？")]),t._v(" "),s("ol",[s("li",[s("strong",[t._v("多版本管理")]),t._v("： Pyenv 允许在同一台计算机上安装多个不同版本的 Python，并且可以轻松地在这些版本之间切换。")]),t._v(" "),s("li",[s("strong",[t._v("项目环境隔离")]),t._v("： 您可以为每个项目设置特定的 Python 版本，确保项目在正确的 Python 环境中运行，而不会受到其他项目的影响。这有助于避免由于 Python 版本不匹配而导致的依赖问题。")]),t._v(" "),s("li",[s("strong",[t._v("灵活性和便捷性")]),t._v("： 使用 Pyenv，您可以轻松地在不同的 Python 版本之间切换，而无需手动安装或删除 Python。这提供了灵活性，可以根据项目需求快速选择合适的 Python 版本。")]),t._v(" "),s("li",[s("strong",[t._v("隔离系统环境")]),t._v("： Pyenv 不会直接修改系统的默认 Python 版本，而是通过环境变量来控制当前使用的 Python 版本。这确保了系统环境的稳定性，同时允许开发人员在项目级别进行灵活管理。")]),t._v(" "),s("li",[s("strong",[t._v("简化环境配置")]),t._v("： 使用 Pyenv，您可以更轻松地设置和管理开发环境，而无需担心与系统 Python 版本冲突或兼容性问题。")])])])}),[],!1,null,null,null);s.default=e.exports}}]);