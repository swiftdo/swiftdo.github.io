(window.webpackJsonp=window.webpackJsonp||[]).push([[301],{765:function(a,s,t){"use strict";t.r(s);var e=t(2),r=Object(e.a)({},(function(){var a=this,s=a._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("p",[a._v("容器化的应用程序通常会将日志记录到标准输出和标准错误流，而不是将其写入文件，这就允许用户可以通过简单、标准的方式查看不同应用程序的日志。")]),a._v(" "),s("p",[a._v("容器运行时（在我们的例子中为Docker）将这些流重定向到文件，并允许我们运行以下命令来获取容器的日志：")]),a._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[a._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" logs "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("container id"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("\n")])])]),s("p",[a._v("使用ssh命令登录到pod正在运行的节点，并使用docker logs命令查看其日志，但Kubernetes提供了一种更为简单的方法")]),a._v(" "),s("h2",{attrs:{id:"获取pod日志"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#获取pod日志"}},[a._v("#")]),a._v(" 获取pod日志")]),a._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[a._v("$ kubectl logs kubia-manual\n")])])]),s("p",[a._v("如果该pod只包含一个容器，那么查看这种在Kubernetes中运行的应用程序的日志则非常简单")]),a._v(" "),s("h2",{attrs:{id:"获取多容器pod的日志"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#获取多容器pod的日志"}},[a._v("#")]),a._v(" 获取多容器pod的日志")]),a._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[a._v("$ kubectl logs kubia-manual "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-c")]),a._v(" kubia\n")])])]),s("p",[a._v("我们只能获取仍然存在的pod的日志。当一个pod被删除时，它的日志也会被删除。如果希望在pod删除之后仍然可以获取其日志，我们需要设置中心化的、集群范围的日志系统，将所有日志存储到中心存储中。")])])}),[],!1,null,null,null);s.default=r.exports}}]);