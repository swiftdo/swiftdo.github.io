(window.webpackJsonp=window.webpackJsonp||[]).push([[295],{766:function(a,e,s){"use strict";s.r(e);var t=s(2),n=Object(t.a)({},(function(){var a=this,e=a._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[e("p",[a._v("前文我们已经实现将应用部署到Kubernetes，并通过服务暴露访问。使用 Kubernets 的一个主要好处是可以简单的扩展部署。")]),a._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[a._v("$ kubectl run kubia "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--image")]),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("kubia "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--port")]),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("8080")]),a._v(" --image-pull-policy"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("Never\n")])])]),e("p",[a._v("在 Kubernetes 1.18 版本之前，kubectl run 命令默认创建的是一个 ReplicationController。但是从 Kubernetes 1.18 版本开始，kubectl run 默认行为有所改变，创建的是一个 Pod。")]),a._v(" "),e("p",[a._v("kubectl run 是一个命令行工具，用于快速创建和运行一个单独的 Pod。\n通常用于开发和调试，适合快速启动一个容器而不需要其他管理功能。")]),a._v(" "),e("ul",[e("li",[a._v("不支持复杂的管理功能（如滚动更新、版本控制等）。")]),a._v(" "),e("li",[a._v("更适合用于单次运行的容器，或在开发中临时使用。")])]),a._v(" "),e("p",[a._v("kubectl run 的作用通常是启动一个 Pod，而不是管理多个副本，不支持直接管理 Pod 数量。")]),a._v(" "),e("p",[a._v("如果需要管理 Pod 的数量，可以考虑以下几种方案：")]),a._v(" "),e("ol",[e("li",[a._v("使用 Deployment： Deployment 是用于管理多个 Pod 的推荐方式。可以通过 Deployment 轻松设置 Pod 的数量、滚动更新、回滚等。")]),a._v(" "),e("li",[a._v("使用 ReplicaSet：如果你希望直接使用 ReplicaSet 来管理 Pod 的副本，可以创建一个 ReplicaSet。")])]),a._v(" "),e("p",[a._v("现在我们使用 "),e("code",[a._v("ReplicaSet")]),a._v(" 方式来实现横向扩展。")]),a._v(" "),e("p",[a._v("首先移除我们之前创建的pod：")]),a._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[a._v("$ kubectl delete pod kubia "),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 删除kubia的pod")]),a._v("\n$ kubectl get pods "),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 查看pod 是否存在")]),a._v("\n$ kubectl delete "),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("service")]),a._v(" kubia kubia-http "),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 删除之前开启的服务")]),a._v("\n$ kubectl get services "),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 查看服务")]),a._v("\n")])])]),e("p",[a._v("然后创建一个 "),e("code",[a._v("kubia-rs.yaml")]),a._v(" 的配置文件：")]),a._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[a._v("apiVersion: apps/v1\nkind: ReplicaSet\nmetadata:\n  name: kubia-rs\nspec:\n  replicas: "),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("3")]),a._v("\n  selector:\n    matchLabels:\n      app: kubia\n  template:\n    metadata:\n      labels:\n        app: kubia\n    spec:\n      containers:\n      - name: kubia\n        image: kubia   "),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 这里指定容器的镜像")]),a._v("\n        ports:\n        - containerPort: "),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("8080")]),a._v("\n        imagePullPolicy: Never\n")])])]),e("p",[a._v("然后运行：")]),a._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[a._v("$ kubectl apply "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-f")]),a._v(" kubia-rs.yaml\n$ kubectl get rs\nNAME       DESIRED   CURRENT   READY   AGE\nkubia-rs   "),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("3")]),a._v("         "),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("3")]),a._v("         "),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("3")]),a._v("       90s\n$ kubectl get pods              \nNAME             READY   STATUS    RESTARTS   AGE\nkubia-rs-cktr6   "),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),a._v("/1     Running   "),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),a._v("          8s\nkubia-rs-hg5w2   "),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),a._v("/1     Running   "),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),a._v("          8s\nkubia-rs-tp7gl   "),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),a._v("/1     Running   "),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),a._v("          8s\n")])])]),e("p",[a._v("就创建了 3 个 pod，然后通过负载均衡的模式暴露到外网：")]),a._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[a._v("$ kubectl expose rs kubia-rs "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--type")]),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("LoadBalancer "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--port")]),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("8080")]),a._v(" --target-port"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("8080")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--name")]),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("kubia-lb-svc\n")])])]),e("p",[a._v("这样外网就可以访问了。")])])}),[],!1,null,null,null);e.default=n.exports}}]);