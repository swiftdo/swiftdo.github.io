(window.webpackJsonp=window.webpackJsonp||[]).push([[42],{699:function(t,a,i){"use strict";i.r(a);var e=i(8),s=Object(e.a)({},(function(){var t=this,a=t.$createElement,i=t._self._c||a;return i("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[i("h2",{attrs:{id:"基础样例"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#基础样例"}},[t._v("#")]),t._v(" 基础样例")]),t._v(" "),i("p",[t._v("此目录中的基本示例展示了如何设置 CMake 项目、设置编译标志、创建和链接可执行文件和库以及安装它们。")]),t._v(" "),i("p",[t._v("包括的例子是：")]),t._v(" "),i("ul",[i("li",[i("p",[i("RouterLink",{attrs:{to:"/basis/cmake/01-basic/A-hello-cmake.html"}},[t._v("hello-cmake")]),t._v(". A hello world example.")],1)]),t._v(" "),i("li",[i("p",[i("RouterLink",{attrs:{to:"/basis/cmake/01-basic/B-hello-headers.html"}},[t._v("hello-headers")]),t._v(". A slightly more complicated hello world example, using separate source and include folders.")],1)]),t._v(" "),i("li",[i("p",[i("RouterLink",{attrs:{to:"/basis/cmake/01-basic/C-static-library.html"}},[t._v("static-library")]),t._v(". An example using a static library.")],1)]),t._v(" "),i("li",[i("p",[i("RouterLink",{attrs:{to:"/basis/cmake/01-basic/D-shared-library.html"}},[t._v("shared-library")]),t._v(". An example using a shared library.")],1)]),t._v(" "),i("li",[i("p",[i("RouterLink",{attrs:{to:"/basis/cmake/01-basic/E-installing.html"}},[t._v("installing")]),t._v(". Shows how to create a 'make install' target that will install binaries and libraries.")],1)]),t._v(" "),i("li",[i("p",[i("RouterLink",{attrs:{to:"/basis/cmake/01-basic/F-build-type.html"}},[t._v("build-type")]),t._v(". An example showing how to set a default build and optimization flags for your project.")],1)]),t._v(" "),i("li",[i("p",[i("RouterLink",{attrs:{to:"/basis/cmake/01-basic/G-compile-flags.html"}},[t._v("compile-flags")]),t._v(". Shows how to set additional compile flags.")],1)]),t._v(" "),i("li",[i("p",[i("RouterLink",{attrs:{to:"/basis/cmake/01-basic/H-third-party-library.html"}},[t._v("third-party-library")]),t._v(". Shows an example of how to link third party libraries.")],1)]),t._v(" "),i("li",[i("p",[i("RouterLink",{attrs:{to:"/basis/cmake/01-basic/I-compiling-with-clang.html"}},[t._v("compiling-with-clang")]),t._v(". An example of invoking the clang compiler.")],1)]),t._v(" "),i("li",[i("p",[i("RouterLink",{attrs:{to:"/basis/cmake/01-basic/J-building-with-ninja.html"}},[t._v("building-with-ninja")]),t._v(" - Shows how to generate ninja build files")],1)]),t._v(" "),i("li",[i("p",[i("RouterLink",{attrs:{to:"/basis/cmake/01-basic/K-imported-targets.html"}},[t._v("imported-targets")]),t._v(" - Shows how to link boost using the new imported targets")],1)]),t._v(" "),i("li",[i("p",[i("RouterLink",{attrs:{to:"/basis/cmake/01-basic/L-cpp-standard.html"}},[t._v("cpp-standard")]),t._v(" - Shows various methods to set the C++ standard")],1)])])])}),[],!1,null,null,null);a.default=s.exports}}]);